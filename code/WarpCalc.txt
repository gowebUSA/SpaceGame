var factor;
var speed;
var time;
var distance;
var resultFactor;
var resultSpeed;
var resultTime;
var resultDistance;

function roundResult(result) {
	if (result != 'err' && result != 'âˆž' && result != 'invalid') {
		result = result * 100;
		result = Math.round(result);
		result = result / 100;
	}
	return result;
}

function log10(x) { return Math.LOG10E * Math.log(x); }

function clearForm() {
	document.calculator.speed.value = '';
	document.calculator.factor.value = '';
	document.calculator.time.value = '';
	document.calculator.distance.value = '';
}

function performCalculation() {
//	var findFor = widget.PreferenceForKey('findFor');
	var findFor = document.calculator.findMenu.value;
	if (findFor == 'Distance') {
		findDistance();
	}
	if (findFor == 'Time') {
		findTime();
	}
	if (findFor == 'Speed') {
		findSpeed();
	}
}

function standardizeTime(result) {
	var unitTime = document.calculator.timeUnit.value;
	if (unitTime != 'y') {
		if (unitTime == 'd') {
			result = result / 365.25;
		}
		if (unitTime == 'h') {
			result = result / 365.25 / 24;
		}
		if (unitTime == 'm') {
			result = result / 365.25 / 24 / 60;
		}
		if (unitTime == 's') {
			result = result / 365.25 / 24 / 60 / 60;
		}
	}
	return result;
}

function standardizeDistance(result) {
	var unitDist = document.calculator.distanceUnit.value;
	if (unitDist == 'pc') {
		result = result * 3.2616;
	}
	if (unitDist == 'au') {
		result = result / 63241;
	}
	if (unitDist == 'km') {
		result = result / 9460730472580.800;
	}
	return result;
}

function standardizeSpeed(result) {
	var unitSpeed = document.calculator.speedUnit.value;
	if (unitSpeed == 'km') {
		result = result / 299792.458;
	}
	return result;
}

function convertTime(result) {
	var unitTime = document.calculator.timeUnit.value;
	if (unitTime != 'y') {
		if (unitTime == 'd') {
			result = result * 365.25;
		}
		if (unitTime == 'h') {
			result = result * 365.25 * 24;
		}
		if (unitTime == 'm') {
			result = result * 365.25 * 24 * 60;
		}
		if (unitTime == 's') {
			result = result * 365.25 * 24 * 60 * 60;
		}
	}
	return result;
}

function convertDistance(result) {
	var unitDist = document.calculator.distanceUnit.value;
	if (unitDist == 'pc') {
		result = result / 3.2616;
	}
	if (unitDist == 'au') {
		result = result * 63241;
	}
	if (unitDist == 'km') {
		result = result * 9460730472580.800;
	}
	return result;
}

function convertSpeed(result) {
	var unitSpeed = document.calculator.speedUnit.value;
	if (unitSpeed == 'km') {
		result = result * 299792.458;
	}
	return result;
}

function findSpeedFromFactor() {
	factor = document.calculator.factor.value;
	if (factor != null) {
		var scale = document.calculator.factorScale.value;
		if (scale == "tos") {
			var resultSpeed = Math.pow(factor,3);
		} else {
			if (10 > factor && factor > 9) {
				var resultSpeed = WtoV(factor);
			} else if (factor == 10) {
				var resultSpeed = 'âˆž';
			} else if (factor > 10) {
				var resultSpeed = 'invalid';
			} else {
				var resultSpeed = Math.pow(factor,(10/3));
			}
		}
	}
	resultSpeed = convertSpeed(resultSpeed);	
	resultSpeed = roundResult(resultSpeed);	
	document.calculator.speed.value = resultSpeed;
}

function u(x) {	
// JavaScript formula by Joshua Bell
	return (x <= 0) ? 0 : 1;
}

function WtoV(w)
{
// JavaScript formula by Joshua Bell
	var A = 0.036528749373;
	var n = 1.79522947028;
	var uw = u(w - 9);
	var pw = (uw == 0) ? 0 : (uw * A * Math.pow(-Math.log(10 - w), n));
	return Math.pow(w, 10/3 + pw);
}


function findFactor() {
	speed = document.calculator.speed.value;
	var scale = document.calculator.factorScale.value;
	if (speed != null) {
		speed = standardizeSpeed(speed);
		if (scale == 'tos') {
			var resultFactor = Math.pow(speed,(1/3));
		}
		if (scale == 'tng') {
			if (speed > 1516) {
// Berry-Shields Method:  <http://www.calormen.com/Star_Trek/warpcalc/>
// This section of the JavaScript by Joshua Bell
				var min = 0;
				var max = 10;
				var epsilon = 0.00001;
				var iterations = 10000;
				for(var count = 1; count <= iterations && max - min > epsilon; count++) {
					var test = (max + min) / 2;
					var vtest = WtoV(test);
					if(vtest > speed) {
						max = test;
					} else {
						min = test;
					}
				}
				var resultFactor = max;
//				var resultFactor = 'err';
			} else {
				var resultFactor = Math.pow(speed,3/10);
			}
		}
	}
	resultFactor = roundResult(resultFactor);
	document.calculator.factor.value = resultFactor;
}

function findSpeed() {
	distance = document.calculator.distance.value;
	time = document.calculator.time.value;
	if (distance != null && time != null) {
		distance = standardizeDistance(distance);
		time = standardizeTime(time);
		var resultSpeed = distance / time;
		resultSpeed = convertSpeed(resultSpeed);
		resultSpeed = roundResult(resultSpeed);
		document.calculator.speed.value = resultSpeed;
		findFactor();
	}
}

function findTime() {
	distance = document.calculator.distance.value;
	speed = document.calculator.speed.value;
	if (speed != null && speed != null) {
		speed = standardizeSpeed(speed);
		distance = standardizeDistance(distance);
		var resultTime = distance/speed;
		resultTime = convertTime(resultTime);
		resultTime = roundResult(resultTime);
		document.calculator.time.value = resultTime;
	}
}

function findDistance() {
	time = document.calculator.time.value;
	speed = document.calculator.speed.value;
	if (speed != null && time != null) {
		time = standardizeTime(time);
		speed = standardizeSpeed(speed);
		var resultDistance = speed*time;
		resultDistance = convertDistance(resultDistance);
		resultDistance = roundResult(resultDistance);
		document.calculator.distance.value = resultDistance;
	}
}
